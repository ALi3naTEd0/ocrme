name: Flatpak Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
        default: '0.1.0-1'
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: 'Version number'

env:
  FLATPAK_ID: com.ali3nated0.ocrme

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install all build dependencies first
      - name: Install Dependencies
        run: |
          sudo add-apt-repository -y ppa:flatpak/stable
          sudo apt-get update
          sudo apt-get install -y \
            flatpak \
            flatpak-builder \
            xz-utils \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            libgtk-3-dev \
            liblzma-dev \
            libstdc++-12-dev \
            libglu1-mesa \
            imagemagick \
            tesseract-ocr \
            tesseract-ocr-eng \
            tesseract-ocr-spa

      # Setup Flatpak first
      - name: Setup Flatpak
        run: |
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08

      # Enable caching for Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.1'
          channel: 'stable'
          cache: true

      # Add pub dependencies cache
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            .dart_tool/
          key: pub-dependencies-flatpak-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            pub-dependencies-flatpak-${{ runner.os }}-

      - name: Download essential language files
        id: cache-tessdata
        uses: actions/cache@v4
        with:
          path: assets/tessdata
          key: tessdata-flatpak-${{ hashFiles('pubspec.yaml') }}

      # Add this missing step to ensure tessdata is downloaded when needed
      - name: Download Tessdata if needed
        if: steps.cache-tessdata.outputs.cache-hit != 'true'
        run: |
          mkdir -p assets/tessdata
          # English and Spanish are the core languages for OCRMe
          curl -L -o assets/tessdata/eng.traineddata https://github.com/tesseract-ocr/tessdata_fast/raw/main/eng.traineddata
          curl -L -o assets/tessdata/spa.traineddata https://github.com/tesseract-ocr/tessdata_fast/raw/main/spa.traineddata

      - name: Build Flutter App
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
          
          # Create native_assets directory to prevent the CMake error
          mkdir -p build/native_assets/linux
          
          # Build Flutter app with --no-pub for efficiency
          flutter build linux --release --no-pub
          
          # Prepare icons - create a square icon from our logo
          mkdir -p icons
          
          # Create a proper square icon for Flatpak
          convert -size 512x512 xc:"#6A11CB" icons/bg.png
          
          # Get dimensions of the logo file
          if [ -f "assets/logo.png" ]; then
            convert assets/logo.png -resize 400x -background none icons/logo_resized.png
          elif [ -f "assets/logo.svg" ]; then
            convert assets/logo.svg -resize 400x -background none icons/logo_resized.png
          else
            echo "Warning: No logo file found, creating placeholder..."
            convert -size 400x200 xc:"#ffffff" -fill "#000000" -gravity center -annotate 0 "OCRMe" icons/logo_resized.png
          fi
          
          # Center the logo on the background
          # Get dimensions
          LOGO_WIDTH=$(identify -format "%w" icons/logo_resized.png)
          LOGO_HEIGHT=$(identify -format "%h" icons/logo_resized.png)
          
          # Calculate position
          X_OFFSET=$(( (512 - LOGO_WIDTH) / 2 ))
          Y_OFFSET=$(( (512 - LOGO_HEIGHT) / 2 ))
          
          # Composite the images
          convert icons/bg.png icons/logo_resized.png -geometry +${X_OFFSET}+${Y_OFFSET} -composite icons/com.ali3nated0.ocrme.png
          
          # Copy files to build directory
          rm -rf flatpak-build
          mkdir -p flatpak-build
          cp -r build/linux/x64/release/bundle/* flatpak-build/
          cp icons/com.ali3nated0.ocrme.png flatpak-build/
          
          # Create data directory and copy tessdata
          mkdir -p flatpak-build/data/tessdata
          cp -r assets/tessdata/* flatpak-build/data/tessdata/
          
          # Create desktop entry with correct icon name
          cat > flatpak-build/com.ali3nated0.ocrme.desktop << EOF
          [Desktop Entry]
          Name=OCRMe
          Exec=ocrme
          Icon=com.ali3nated0.ocrme
          Type=Application
          Categories=Utility;Graphics;TextTools;
          Keywords=OCR;Text;Recognition;
          EOF

      - name: Create Flatpak Manifest
        run: |
          cat > com.ali3nated0.ocrme.yml << EOF
          app-id: com.ali3nated0.ocrme
          runtime: org.freedesktop.Platform
          runtime-version: '23.08'
          sdk: org.freedesktop.Sdk
          command: ocrme
          finish-args:
            - --share=ipc
            - --socket=fallback-x11
            - --socket=wayland
            - --device=dri
            - --filesystem=home
            # Add access to tesseract
            - --filesystem=/usr/share/tesseract-ocr:ro
            # Add share/system for glib
            - --env=GIO_EXTRA_MODULES=/app/lib/gio/modules
          modules:
            - name: tesseract
              buildsystem: simple
              build-commands:
                - mkdir -p /app/bin
                - ln -s /usr/bin/tesseract /app/bin/tesseract
              sources:
                - type: file
                  path: /usr/bin/tesseract
                  dest-filename: tesseract
            - name: ocrme
              buildsystem: simple
              build-commands:
                - install -Dm755 ocrme /app/bin/ocrme
                - install -d /app/lib
                - cp -r lib/* /app/lib/
                - install -d /app/data/tessdata
                - cp -r data/tessdata/* /app/data/tessdata/
                - install -Dm644 com.ali3nated0.ocrme.desktop /app/share/applications/${FLATPAK_ID}.desktop
                - install -Dm644 com.ali3nated0.ocrme.png /app/share/icons/hicolor/512x512/apps/${FLATPAK_ID}.png
              sources:
                - type: dir
                  path: flatpak-build
              # Add glib dependency
              add-extensions:
                org.freedesktop.Platform.GL:
                  version: '23.08'
                  directory: lib/GL
                  subdirectories: true
                  no-autodownload: true
                  autodelete: false
                org.freedesktop.Platform.Timezones:
                  version: '23.08'
                  directory: share/zoneinfo
          EOF

      - name: Build Flatpak Package
        run: |
          echo "Building Flatpak..."
          flatpak-builder --force-clean --repo=repo build-flatpak com.ali3nated0.ocrme.yml
          echo "Creating bundle..."
          flatpak build-bundle repo OCRMe_${{ inputs.version || github.event.inputs.version }}.flatpak $FLATPAK_ID

      - name: Upload Flatpak Package
        uses: actions/upload-artifact@v4
        with:
          name: OCRMe-Flatpak
          path: OCRMe_${{ inputs.version || github.event.inputs.version }}.flatpak
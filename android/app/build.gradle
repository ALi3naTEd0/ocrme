// Plugin definitions
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// Keystore properties setup
def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    try {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        println "Keystore properties loaded successfully"
    } catch (Exception e) {
        println "Error loading key.properties: ${e.message}"
    }
} else {
    println "Warning: key.properties file not found!"
}

// Android configuration
android {
    // Application namespace
    namespace = "com.ali3nated0.ocrme"
    
    // Update to latest NDK version (they are backward compatible)
    ndkVersion "27.0.12077973"
    
    // SDK versions
    compileSdkVersion flutter.compileSdkVersion

    // Java compatibility settings
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    // Kotlin settings
    kotlinOptions {
        jvmTarget = '17'
    }

    // Source directories
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // Application configuration
    defaultConfig {
        // Package identifier (should match the one in AndroidManifest.xml)
        applicationId "com.ali3nated0.ocrme"
        
        // SDK versions
        minSdkVersion 21 // Set to 21 for better device compatibility
        targetSdkVersion flutter.targetSdkVersion
        
        // App versioning
        versionCode 3
        versionName "0.1.0-2"
        
        // App display name
        resValue "string", "app_name", "OCRMe"
        
        // IMPORTANT: Use this instead of ndk block to avoid the conflict
        // with the splits configuration that's added by the workflow
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
                cppFlags "-std=c++17"
            }
        }
    }
    
    // ABI Splits configuration - this replaces the conflicting ndk.abiFilters
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86_64"
            universalApk true
        }
    }

    // Signing configurations
    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    // Build configurations
    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            // Fix the R8 issue by using the right settings for minification
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        debug {
            // For easier debugging
            minifyEnabled false
            shrinkResources false
        }
    }
    
    // Fix the packaging options issues - updated for newer AGP versions
    packagingOptions {
        // Use the new DSL for Gradle 7+
        resources {
            excludes += [
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/license.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/notice.txt',
                'META-INF/ASL2.0',
                'META-INF/*.kotlin_module'
            ]
        }
        jniLibs {
            useLegacyPackaging = true
            pickFirsts += ['lib/**/*.so']
        }
    }

    // Make sure native libraries are extracted
    // This is necessary for Tesseract OCR to work properly
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
        noCompress "traineddata"
    }
    
    // Simple fix for duplicate classes
    lintOptions {
        disable 'InvalidPackage'
    }
}

// Flutter configuration
flutter {
    source = "../.."
}

// Dependencies
dependencies {
    // Use only one of the Google Play libraries to avoid conflicts
    implementation 'com.google.android.play:core:1.10.3'
}
